<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>